<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>